<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>